<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>